<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>